<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>